<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>